<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>